<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>